<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>